<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>